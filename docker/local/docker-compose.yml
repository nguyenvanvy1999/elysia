services:

  elysia-kafka:
    container_name: elysia-kafka
    image: 'bitnami/kafka:latest'
    networks:
      - elysia-network
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
    env_file:
      - path: ./.env
        required: true
    ports:
      - '9094:9094'

  elysia-redis:
    container_name: elysia-redis
    image: redis/redis-stack-server:latest
    environment:
      - "REDIS_ARGS=--requirepass ${REDIS_PASSWORD}"
    ports:
      - "6339:6379"
    networks:
      - elysia-network
    restart: always
    env_file:
      - path: ./.env
        required: true

  elysia-postgres:
    container_name: elysia-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${POSTGRES_INIT_DB}
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - elysia-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - path: ./.env
        required: true

networks:
  elysia-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/16
volumes:
  postgres: