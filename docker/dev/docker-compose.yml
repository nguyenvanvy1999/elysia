services:

  elysia-dev:
    container_name: elysia-dev
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    env_file: ../../.env.dev
    volumes:
      - ../../src/:/app/src/
      - ../../public/:/app/public/
    ports:
      - '3001:3001'
    networks:
      - elysia-network

  elysia-redis:
    container_name: elysia-redis
    image: redis/redis-stack-server:latest
    environment:
      - "REDIS_ARGS=--requirepass ${REDIS_PASSWORD}"
    ports:
      - "6339:6379"
    networks:
      - elysia-network
    restart: always
    env_file:
      - path: ./.env
        required: true

  elysia-postgres:
    container_name: elysia-postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${POSTGRES_INIT_DB}
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - elysia-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - path: ./.env
        required: true

networks:
  elysia-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
    ipam:
      driver: default
      config:
        - subnet: 172.23.0.0/16
volumes:
  postgres: